global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Rule files
rule_files:
  - alert_rules.yml
  - recording_rules.yml

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node exporter metrics
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['node-exporter:9100']

  # Cove API AI application metrics
  - job_name: 'coveai_app'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['app:4000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'coveai-app'

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'coveai-postgres'

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'coveai-redis'

  # ChromaDB metrics
  - job_name: 'chroma'
    static_configs:
      - targets: ['chroma:8000']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'coveai-chroma'

  # Jaeger tracing metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:16686']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'coveai-jaeger'

  # Docker daemon metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-daemon:9323']
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'coveai-docker'

# Advanced configuration options
# Allows dynamic service discovery and configuration
# Uncomment and configure as needed
# service_discovery:
#   - role: 'service'
#     consul:
#       server: 'consul:8500'
#       services: ['coveai-app', 'postgres', 'redis']

# Optional: Remote write configuration for long-term storage
# remote_write:
#   - url: 'https://your-remote-storage-endpoint/write'
#     basic_auth:
#       username: 'your-username'
#       password: 'your-password'

# Optional: Remote read configuration for historical data
# remote_read:
#   - url: 'https://your-remote-storage-endpoint/read'
#     basic_auth:
#       username: 'your-username'
#       password: 'your-password'

# Experimental: OpenTelemetry configuration
# opentelemetry_config:
#   endpoint: 'http://otel-collector:4317'
#   insecure: true

# Security and access control
# Uncomment and configure as needed
# authorization:
#   type: 'basic'
#   credentials_file: '/etc/prometheus/web.yml'

# Performance and resource tuning
storage:
  tsdb:
    path: '/prometheus'
    retention:
      time: 30d
      size: 50GB

# Logging configuration
log_level: info
log_format: logfmt